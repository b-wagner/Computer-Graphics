package assignment3;

import java.awt.*;
import java.util.*;
import java.awt.event.*;
import javax.swing.*;

public class ClippingDriver extends JFrame
{	
	final int WIN_HEIGHT = 700;
	final int WIN_WIDTH = 900;

	Button lights;
	boolean lightOn = true;

	JPanel buttonPanel;

	ArrayList<DrawShapes> triangles = new ArrayList<DrawShapes>();

	int triSize = 500;
	int triNum = 3;
	
	Spotlight spot;
	Point mouseClick;

	public ClippingDriver()
	{
		setTitle("Assignment 3");
		setSize(WIN_WIDTH,WIN_HEIGHT);
		setResizable(false);
		setLocationRelativeTo(null);
		setCursor(Cursor.CROSSHAIR_CURSOR);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		lights = new Button("Turn Lights Off");
		buttonPanel = new JPanel();
		buttonPanel.add(lights);

		add(buttonPanel, BorderLayout.SOUTH);

		lights.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				if(lightOn)
				{
					getContentPane().setBackground(Color.black);
					lights.setLabel("Turn Lights On");
					lightOn = false;
					spot = new Spotlight(100, 100);
					repaint();
				}
				else
				{
					getContentPane().setBackground(Color.white);
					repaint();
					lights.setLabel("Turn Lights Off");
					lightOn = true;
				}
			}
		});

		setVisible(true);

		generateShapes();
	}

	public void generateShapes()
	{
		Random randX = new Random();
		Random randY = new Random();

		for(int i = 0; i < triNum; i++)
		{
			int x = randX.nextInt(900);
			int y = randY.nextInt(700);
			triangles.add(new DrawShapes(x, y, triSize));
		}
	}

	public void paint(Graphics g)
	{
		super.paint(g);

		if(lightOn)
		{
			for(DrawShapes x : triangles)
			{
				x.draw(g);
			}
		}

		if(!lightOn)
		{
			spot.draw(g);
		}
	}

	public static void main(String[] args)
	{
		new ClippingDriver();
	}
}
